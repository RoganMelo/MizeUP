@model MizeUP.Models.StudentModel

@{
    ViewBag.Title = Languages.SignUp;
}

<div class="container">
    <div class="page-header">
        <h2>
            <strong>@Languages.SignUp</strong>
        </h2>
    </div>
    <div class="form-horizontal">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                <div class="col-md-offset-2 col-md-4">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Name, htmlAttributes: new { autocomplete = "off", @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger col-md-6" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.LastName, htmlAttributes: new { autocomplete = "off", @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger col-md-6" })
            </div>
            <div class="form-group">
                @Html.Label(Languages.EducationalInstitution, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("Institution", (SelectList)ViewBag.Institutions, Languages.Choose, htmlAttributes: new { @class = "form-control" })
                </div>
                <span id="validationMessageInstitution" class="text-danger col-md-6" hidden>@Languages.Required</span>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Level, (SelectList)ViewBag.Levels, Languages.Choose, htmlAttributes: new { @class = "form-control", @disabled = "true" })
                </div>
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger col-md-6" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Email, htmlAttributes: new { autocomplete = "off", @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger col-md-6" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { autocomplete = "off", @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.PasswordFor(model => model.Password, htmlAttributes: new { autocomplete = "off", @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger col-md-6" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { autocomplete = "off", @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.PasswordFor(model => model.ConfirmPassword, htmlAttributes: new { autocomplete = "off", @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger col-md-6" })
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-4">
                    <button type="submit" class="btn btn-success">@Languages.SignUp</button>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    <script>
        var form = $('form');
        var institution = $('#Institution');
        var validationMessageInstitution = $('#validationMessageInstitution');
        var level = $('#Level');

        level.prop('disabled', true);

        level.change(function () {
            if (level.val() != "") {
                validationMessageLevel.prop('hidden', true);
            } else {
                validationMessageLevel.prop('hidden', false);
            }
        });

        institution.change(function () {
            level.empty();
            level.prepend($('<option value></option>').html('@Languages.Choose'));
            if (institution.val() != "") {
                validationMessageInstitution.prop('hidden', true);
                loadIcon(true);
                var url = '@Url.Action("ListLevelsByInstitution", "Level")';
                $.ajax({
                    dataType: "json",
                    type: "GET",
                    url: url,
                    data: { institutionId: $(this).val() },
                    success: function (response) {
                        level.empty();
                        level.prepend($('<option value></option>').html('@Languages.Choose'));
                        $(response).each(function (i) {
                            level.append($('<option></option>').val(parseInt(response[i].Id)).html(response[i].Name));
                        });
                        level.prop('disabled', false);
                    }
                });
                loadIcon(false);
            } else {
                validationMessageInstitution.prop('hidden', false);
            }
        });
    </script>
}